{"remainingRequest":"/Users/tudorcampan/Desktop/SCOALA/licenta/DiplomaProjectFE/node_modules/babel-loader/lib/index.js!/Users/tudorcampan/Desktop/SCOALA/licenta/DiplomaProjectFE/node_modules/eslint-loader/index.js??ref--13-0!/Users/tudorcampan/Desktop/SCOALA/licenta/DiplomaProjectFE/src/store/auth.module.js","dependencies":[{"path":"/Users/tudorcampan/Desktop/SCOALA/licenta/DiplomaProjectFE/src/store/auth.module.js","mtime":1679483917148},{"path":"/Users/tudorcampan/Desktop/SCOALA/licenta/DiplomaProjectFE/node_modules/cache-loader/dist/cjs.js","mtime":1673878691195},{"path":"/Users/tudorcampan/Desktop/SCOALA/licenta/DiplomaProjectFE/node_modules/babel-loader/lib/index.js","mtime":1673878691174},{"path":"/Users/tudorcampan/Desktop/SCOALA/licenta/DiplomaProjectFE/node_modules/eslint-loader/index.js","mtime":1673878698313}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy90dWRvcmNhbXBhbi9EZXNrdG9wL1NDT0FMQS9saWNlbnRhL0RpcGxvbWFQcm9qZWN0RkUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7CmltcG9ydCBhcGkgZnJvbSAiLi4vYXBpIjsKdmFyIHVzZXIgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ1c2VyIikpOwp2YXIgaW5pdGlhbFN0YXRlID0gdXNlciA/IHsKICBzdGF0dXM6IHsKICAgIGxvZ2dlZEluOiB0cnVlCiAgfSwKICB1c2VyOiB1c2VyCn0gOiB7CiAgc3RhdHVzOiB7CiAgICBsb2dnZWRJbjogZmFsc2UKICB9LAogIHVzZXI6IG51bGwKfTsKZXhwb3J0IHZhciBhdXRoID0gewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IGluaXRpYWxTdGF0ZSwKICBhY3Rpb25zOiB7CiAgICBsb2dpbjogZnVuY3Rpb24gbG9naW4oX3JlZiwgdXNlcikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBjb21taXQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBhcGkuYXV0aC5sb2dpbih1c2VyKS50aGVuKGZ1bmN0aW9uICh1c2VyKSB7CiAgICAgICAgICAgICAgICAgIGNvbW1pdCgibG9naW5TdWNjZXNzIiwgdXNlcik7CiAgICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodXNlcik7CiAgICAgICAgICAgICAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgY29tbWl0KCJsb2dpbkZhaWx1cmUiKTsKICAgICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICAgICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGxvZ291dDogZnVuY3Rpb24gbG9nb3V0KF9yZWYyKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgIGFwaS5hdXRoLmxvZ291dCgpOwogICAgICBjb21taXQoImxvZ291dCIpOwogICAgfSwKICAgIHJlZ2lzdGVyOiBmdW5jdGlvbiByZWdpc3RlcihfcmVmMywgdXNlcikgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgICByZXR1cm4gYXBpLmF1dGgucmVnaXN0ZXIodXNlcikudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBjb21taXQoInJlZ2lzdGVyU3VjY2VzcyIpOwogICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUocmVzcG9uc2UuZGF0YSk7CiAgICAgIH0sIGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGNvbW1pdCgicmVnaXN0ZXJGYWlsdXJlIik7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIGxvZ2luU3VjY2VzczogZnVuY3Rpb24gbG9naW5TdWNjZXNzKHN0YXRlLCB1c2VyKSB7CiAgICAgIHN0YXRlLnN0YXR1cy5sb2dnZWRJbiA9IHRydWU7CiAgICAgIHN0YXRlLnVzZXIgPSB1c2VyOwogICAgfSwKICAgIGxvZ2luRmFpbHVyZTogZnVuY3Rpb24gbG9naW5GYWlsdXJlKHN0YXRlKSB7CiAgICAgIHN0YXRlLnN0YXR1cy5sb2dnZWRJbiA9IGZhbHNlOwogICAgICBzdGF0ZS51c2VyID0gbnVsbDsKICAgIH0sCiAgICBsb2dvdXQ6IGZ1bmN0aW9uIGxvZ291dChzdGF0ZSkgewogICAgICBzdGF0ZS5zdGF0dXMubG9nZ2VkSW4gPSBmYWxzZTsKICAgICAgc3RhdGUudXNlciA9IG51bGw7CiAgICB9LAogICAgcmVnaXN0ZXJTdWNjZXNzOiBmdW5jdGlvbiByZWdpc3RlclN1Y2Nlc3Moc3RhdGUpIHsKICAgICAgc3RhdGUuc3RhdHVzLmxvZ2dlZEluID0gZmFsc2U7CiAgICB9LAogICAgcmVnaXN0ZXJGYWlsdXJlOiBmdW5jdGlvbiByZWdpc3RlckZhaWx1cmUoc3RhdGUpIHsKICAgICAgc3RhdGUuc3RhdHVzLmxvZ2dlZEluID0gZmFsc2U7CiAgICB9CiAgfSwKICBnZXR0ZXJzOiB7CiAgICBpc0FkbWluOiBmdW5jdGlvbiBpc0FkbWluKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS51c2VyLnJvbGVzLmluY2x1ZGVzKCJBRE1JTiIpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/tudorcampan/Desktop/SCOALA/licenta/DiplomaProjectFE/src/store/auth.module.js"],"names":["api","user","JSON","parse","localStorage","getItem","initialState","status","loggedIn","auth","namespaced","state","actions","login","commit","then","Promise","resolve","error","reject","logout","register","response","data","mutations","loginSuccess","loginFailure","registerSuccess","registerFailure","getters","isAdmin","roles","includes"],"mappings":"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","sourcesContent":["import api from \"../api\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst initialState = user\n  ? { status: { loggedIn: true }, user }\n  : { status: { loggedIn: false }, user: null };\n\nexport const auth = {\n  namespaced: true,\n  state: initialState,\n  actions: {\n    async login({ commit }, user) {\n      return api.auth.login(user).then(\n        (user) => {\n          commit(\"loginSuccess\", user);\n          return Promise.resolve(user);\n        },\n        (error) => {\n          commit(\"loginFailure\");\n          return Promise.reject(error);\n        }\n      );\n    },\n    logout({ commit }) {\n      api.auth.logout();\n      commit(\"logout\");\n    },\n    register({ commit }, user) {\n      return api.auth.register(user).then(\n        (response) => {\n          commit(\"registerSuccess\");\n          return Promise.resolve(response.data);\n        },\n        (error) => {\n          commit(\"registerFailure\");\n          return Promise.reject(error);\n        }\n      );\n    },\n  },\n  mutations: {\n    loginSuccess(state, user) {\n      state.status.loggedIn = true;\n      state.user = user;\n    },\n    loginFailure(state) {\n      state.status.loggedIn = false;\n      state.user = null;\n    },\n    logout(state) {\n      state.status.loggedIn = false;\n      state.user = null;\n    },\n    registerSuccess(state) {\n      state.status.loggedIn = false;\n    },\n    registerFailure(state) {\n      state.status.loggedIn = false;\n    },\n  },\n  getters: {\n    isAdmin: (state) => {\n      return state.user.roles.includes(\"ADMIN\");\n    },\n  },\n};\n"]}]}