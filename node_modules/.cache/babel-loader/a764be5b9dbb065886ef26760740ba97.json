{"remainingRequest":"/Users/tudorcampan/Desktop/SCOALA/licenta/DiplomaProjectFE/node_modules/babel-loader/lib/index.js!/Users/tudorcampan/Desktop/SCOALA/licenta/DiplomaProjectFE/node_modules/eslint-loader/index.js??ref--13-0!/Users/tudorcampan/Desktop/SCOALA/licenta/DiplomaProjectFE/src/api/index.js","dependencies":[{"path":"/Users/tudorcampan/Desktop/SCOALA/licenta/DiplomaProjectFE/src/api/index.js","mtime":1679483917145},{"path":"/Users/tudorcampan/Desktop/SCOALA/licenta/DiplomaProjectFE/node_modules/cache-loader/dist/cjs.js","mtime":1673878691195},{"path":"/Users/tudorcampan/Desktop/SCOALA/licenta/DiplomaProjectFE/node_modules/babel-loader/lib/index.js","mtime":1673878691174},{"path":"/Users/tudorcampan/Desktop/SCOALA/licenta/DiplomaProjectFE/node_modules/eslint-loader/index.js","mtime":1673878698313}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL3R1ZG9yY2FtcGFuL0Rlc2t0b3AvU0NPQUxBL2xpY2VudGEvRGlwbG9tYVByb2plY3RGRS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgY2FtZWxDYXNlIGZyb20gImxvZGFzaC1lcyI7Cgp2YXIgcmVxdWlyZU1vZHVsZSA9IHJlcXVpcmUuY29udGV4dCgiLi9zZXJ2aWNlcyIsIGZhbHNlLCAvXC5qcyQvKTsKCnZhciBhcGkgPSB7fTsKcmVxdWlyZU1vZHVsZS5rZXlzKCkuZm9yRWFjaChmdW5jdGlvbiAoZmlsZU5hbWUpIHsKICBpZiAoZmlsZU5hbWUgPT09ICIuL2luZGV4LmpzIikgcmV0dXJuOwogIHZhciBtb2R1bGVOYW1lID0gY2FtZWxDYXNlKGZpbGVOYW1lLnJlcGxhY2UoLyhcLlwvfFwuanMpL2csICIiKSk7CiAgYXBpW21vZHVsZU5hbWVdID0gX29iamVjdFNwcmVhZCh7fSwgcmVxdWlyZU1vZHVsZShmaWxlTmFtZSkuZGVmYXVsdCk7Cn0pOwpleHBvcnQgZGVmYXVsdCBhcGk7"},{"version":3,"sources":["/Users/tudorcampan/Desktop/SCOALA/licenta/DiplomaProjectFE/src/api/index.js"],"names":["camelCase","requireModule","require","context","api","keys","forEach","fileName","moduleName","replace","default"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,WAAtB;;AACA,IAAMC,aAAa,GAAGC,OAAO,CAACC,OAAR,CAAgB,YAAhB,EAA8B,KAA9B,EAAqC,OAArC,CAAtB;;AACA,IAAMC,GAAG,GAAG,EAAZ;AAEAH,aAAa,CAACI,IAAd,GAAqBC,OAArB,CAA6B,UAACC,QAAD,EAAc;AACzC,MAAIA,QAAQ,KAAK,YAAjB,EAA+B;AAC/B,MAAMC,UAAU,GAAGR,SAAS,CAACO,QAAQ,CAACE,OAAT,CAAiB,cAAjB,EAAiC,EAAjC,CAAD,CAA5B;AACAL,EAAAA,GAAG,CAACI,UAAD,CAAH,qBACKP,aAAa,CAACM,QAAD,CAAb,CAAwBG,OAD7B;AAGD,CAND;AAQA,eAAeN,GAAf","sourcesContent":["import camelCase from \"lodash-es\";\nconst requireModule = require.context(\"./services\", false, /\\.js$/);\nconst api = {};\n\nrequireModule.keys().forEach((fileName) => {\n  if (fileName === \"./index.js\") return;\n  const moduleName = camelCase(fileName.replace(/(\\.\\/|\\.js)/g, \"\"));\n  api[moduleName] = {\n    ...requireModule(fileName).default,\n  };\n});\n\nexport default api;\n"]}]}